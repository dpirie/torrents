# 1.   https://github.com/sebgl/htpc-download-box
# 2.   https://www.smarthomebeginner.com/docker-home-media-server-2018-basic/
# 3.   https://blog.swakes.co.uk/automated-media-box-part3/

version: "2.2"
services:

  plex:
    container_name: plex
    image: plexinc/pms-docker:plexpass
    restart: unless-stopped
    environment:
      - TZ="${TZ}"
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - ADVERTISE_IP="http://${HOST_IP}:32400/"
    volumes:
      - "/media:/media:rw"
      - "/vault/home/plex:/config:rw"
      - "/vault/home/plex/Scripts:/config/Library/Application Support/Plex Media Server/Scripts:rw"
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
        # If Plex won't start because of a port conflict, stop deluge, then start plex.
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://192.168.0.2:12201"
        tag: "plex"

  torrent:
    container_name: torrent
    image: horjulf/rutorrent-autodl
    restart: unless-stopped
    environment:
      - TZ="${TZ}"
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - "/vault/home/torrents:/config:rw"
      - "/media:/media:rw"
    ports:
      - "8081:80"
      - "5000:5000"
      - "51413:51413"
      - "6881:6881/udp"

  # Get the latest download URL for Deluge Extractor (https://github.com/cvarta/deluge-extractor/releases), then:
  # Having said that, the last release was years ago, so it's likely exactly the same as below:
  #       cd /vault/home/deluge/plugins/ 
  #       sudo chmod 775 .
  #       curl -O https://github.com/cvarta/deluge-extractor/releases/download/v.0.4.1/SimpleExtractor-0.4.1-py2.7.egg
  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: unless-stopped
    network_mode: host   # This is Required
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
#     - DELUGE_LOGLEVEL=error
    volumes:
#     - "/media:/downloads"
      ## This and Sonarr have to use the same path. Mounting all of Media allows it to make hard links.
      - "/media:/media"
      - "/vault/home/deluge:/config"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
      - "8989:8989"
    depends_on:
      - jackett
      - deluge
      - nzbget
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "/vault/home/sonarr:/config"
      - "/media:/media"

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=002 #optional
      - AUTO_UPDATE=true #optional
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /vault/home/deluge/torrents:/downloads # place where to put .torrent files for manual download
      - /vault/home/jackett:/config
    ports:
      - 9117:9117

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=002 #optional
    depends_on:
      - jackett
      - deluge
      - nzbget
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /vault/home/radarr:/config # config files
      - /media:/media
    ports:
      - 7878:7878

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
        #- TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=002 #optional
    depends_on:
      - sonarr
      - radarr
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /vault/home/bazarr:/config # config files
      - /media:/media
    ports:
      - 6767:6767
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /vault/home/readarr:/config # config files
      - /media:/media
    ports:
      - 8787:8787
    restart: unless-stopped

  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - /vault/home/tautulli:/config # config files
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    ports:
      - 8181:8181

  nzbget:
    container_name: nzbget
    image: linuxserver/nzbget:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=002 #optional
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /vault/home/nzbget:/config # config files
      - /media:/media
    ports:
      - 16789:6789

  # https://forums.plex.tv/t/plex-dvr-linux-docker-post-processing-script-using-handbrake-to-compress-video-and-retaining-close-caption/492673
  # https://github.com/jlesage/docker-handbrake
  handbrake:
    container_name: handbrake
    image: jlesage/handbrake
    restart: unless-stopped
    environment:
      - TZ="${TZ}"
      - USER_ID=${PUID}
      - GROUP_ID=${PGID}
      - UMASK=002
      - AUTOMATED_CONVERSION_FORMAT=mkv
      - AUTOMATED_CONVERSION_PRESET=Custom/H.264 MKV 1080p30 Add CC
      - AUTOMATED_CONVERSION_KEEP_SOURCE=0
      - KEEP_APP_RUNNING=1
    ports:
      - "5800:5800"
    volumes:
      - "/vault/home/handbrake:/config:rw"
      - "/media/transcode/hb_watch:/watch:rw"
      - "/media/transcode/hb_output:/output:rw"
     #- "$HOME:/storage:ro"

  organizr:
    image: organizr/organizr
    container_name: organizr
    restart: unless-stopped
    volumes:
      - "/vault/home/organizr:/config:rw"
    environment:
      - TZ="${TZ}"
      - PUID=${PUID}
      - PGID=${PGID}
    ports:
      - "8888:80/tcp"

# unifi:
#   image: jacobalberty/unifi:stable
#   container_name: unifi-controller
#   network_mode: "host"
#   init: true
#   environment:
#     - TZ=${TZ}
#     - RUNAS_UID0=false
#     - UNIFI_UID=${PUID}
#     - UNIFI_GID=${PGID}
#   volumes:
#     - "/vault/home/unifi:/unifi:rw"
#   restart: unless-stopped

  homebridge:
    image: oznu/homebridge:latest
    container_name: homebridge
    restart: always
    network_mode: host
    environment:
      - TZ=${TZ}
      - PGID=${PUID}
      - PUID=${PGID}
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8082
    volumes:
       - "/vault/home/homebridge:/homebridge:rw"

  unpackerr:
    image: "golift/unpackerr"
    container_name: "unpackerr"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "/vault/home/unpackerr/unpackerr.conf:/etc/unpackerr/unpackerr.conf"
      - "/media:/media"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

# ELK Stack
# https://medium.com/geekculture/shoving-your-docker-container-logs-to-elk-made-simple-882bffdbcad6

  elasticsearch:
    image: "elasticsearch:${ELK_VERSION:-7.14.1}"
    container_name: elasticsearch
    environment:
     - discovery.type=single-node
    volumes:
       # Note that this directory must be owned by uid 1000
     - /vault/home/elasticsearch_data/:/usr/share/elasticsearch/data
    mem_limit: "1g"
    ports:
     - 9200:9200
     - 9300:9300

  redis-cache:
    image: redis:6.2

  logstash-agent:
    image: "logstash:${ELK_VERSION:-7.14.1}"
    hostname: logstash
    container_name: logstash-agent
    volumes:
      - ./logstash-agent.conf:/etc/logstash/logstash.conf
    command: logstash -f /etc/logstash/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - 12201:12201/udp

  logstash-central:
    image: "logstash:${ELK_VERSION:-7.14.1}"
    container_name: logstash-central
    volumes:
      - ./logstash-central.conf:/etc/logstash.conf
    command: logstash -f /etc/logstash/logstash.conf
    depends_on:
      - elasticsearch

  kibana:
    image: "kibana:${ELK_VERSION:-7.14.1}"
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
